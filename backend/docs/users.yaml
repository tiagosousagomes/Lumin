openapi: 3.0.0
info:
  title: API de Usuários
  description: Documentação dos endpoints de autenticação e gerenciamento de usuários
  version: 1.0.0
servers:
  - url: http://localhost:3000

paths:
  /login:
    post:
      summary: Autenticar usuário
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [username, password]
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Login realizado com sucesso
        401:
          description: Credenciais inválidas

  /refresh-token:
    post:
      summary: Atualizar token JWT
      tags: [Auth]
      responses:
        200:
          description: Token atualizado
        401:
          description: Token inválido

  /logout:
    post:
      summary: Logout do usuário
      tags: [Auth]
      responses:
        200:
          description: Logout realizado

  /register:
    post:
      summary: Registrar novo usuário
      tags: [Auth]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        201:
          description: Usuário criado com sucesso
        400:
          description: Erro de validação

  /user:
    get:
      summary: Buscar todos os usuários
      tags: [Users]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Lista de usuários

    post:
      summary: Criar usuário
      tags: [Users]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        201:
          description: Usuário criado com sucesso

  /user/{id}:
    get:
      summary: Buscar usuário por ID
      tags: [Users]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        200:
          description: Usuário encontrado
        404:
          description: Usuário não encontrado

    put:
      summary: Atualizar usuário
      tags: [Users]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserUpdateInput'
      responses:
        200:
          description: Usuário atualizado
        404:
          description: Usuário não encontrado

    delete:
      summary: Deletar usuário
      tags: [Users]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        200:
          description: Usuário excluído com sucesso
        404:
          description: Usuário não encontrado

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UserInput:
      type: object
      required:
        - name
        - username
        - email
        - password
      properties:
        name:
          type: string
        username:
          type: string
        email:
          type: string
        password:
          type: string
        avatar:
          type: string
          format: binary
        headerImage:
          type: string
          format: binary

    UserUpdateInput:
      type: object
      properties:
        name:
          type: string
        username:
          type: string
        email:
          type: string
        bio:
          type: string
        location:
          type: string
        avatar:
          type: string
          format: binary
        headerImage:
          type: string
          format: binary
